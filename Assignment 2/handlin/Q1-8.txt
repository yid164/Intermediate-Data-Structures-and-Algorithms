Student Name: Yinsheng Dong
Student Number: 11148648
NSID: yid164
Lecture: CMPT 280

Q1. 
(a). 3. Algorithm A is O(n^3)
(b). big-⊝ is same as big-O, it is ⊝(n^3)

Q2. 
(a). O(2^n)
(b). O(n^3)
(c). O( n log n)

Q3.
(a). O(n^2) + O(log n) + O(n log n)
	= O(n^2) + O(max(log n, n log n))
	= O(n^2) + O(n log n)
	= O(max (n^2, n log n)
	= O(n^2)

(b). O(2^n) * O(n^2)
	= O(2^n * n^2)

(c). 42 O(n log n) + 18 O (n^3)
	= O (n log n) + O (n^3)
	= O (max(n log n, n^3)
	= O (n^3)
(d). O(n^2log2n^2) + O(m)
	= O(max(n^2*log2n^2, m)

Q4.
 Consider the function f(n) =  2n^3 + 5n^2 + 42, to prove that f(n) ∈ O(n^3).
	we know that n^3 >= 42 for all n >= ∛42
	5n^2 <= 5n^3
	2n^3 + 5n^2 <= 7n^3
	2n^3 + 5n^2 + 42 <= 8n^3

	thus, for c=8, and n= ∛42. The statement 2n^3 + 5n^2 + 42 <=cn^3 is true for all
	n > n0, therefore, 2n^3 + 5n^2 + 42 is O(n^3).

Q5.
 Consider the function g(n) = 12n^2logn^2 + 6n + 42, to prove that g(n) ∈ O(n^2logn^2)
	we know that n^2logn^2 >= 42 for all n>=5.4
		     n^2logn^2 >= 6n for all n>=5
	so set n0 = 5.4
	6n + 42 <= 2*n^2logn^2
	12n^2logn^2 + 6n + 42 <= 14* n^2 longn^2
	
	thus, for c=14, n0=5.4. The statement 12n^2logn^2 + 6n + 42 <=cn^3 is true for all
	n > n0, therefore, g(n) ∈ O(n^2logn^2).

Q6.
 Consider the function g(n) = 12n^2logn^2 + 6n + 42, to prove that g(n) !∈ O(n)
	we know that n >= 42 for all n > 42
	but n >= 12n^2logn^2 for all n <= 1
	for these two n, there are no intersections, so we could not prove n0, so g(n) !∈ 	O(n)

Q7.
 (a). Number of loop body statement: 
	f(n) = 1 * n  *  n  = 1 * n ^ 2 
	     = 1 * ( n^2)
 (b). 1 * ( n^2) ∈ ⊝(n^2)

Q8. 
 (a). Number of loop body statement:
	f(n) = 1 + 1 * (n) * (n - 1) = 1 * (n^2 - n) + 1
 (b)  1 * (n^2 - n) + 1 ∈ ⊝(n^2)
	